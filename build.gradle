plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.1.1'
}

group = 'org.breachinthecontainment'
version = '1.0.0'

application {
    mainClass = 'org.breachinthecontainment.launcher_client.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.openjfx:javafx-controls:21"
    implementation "org.openjfx:javafx-graphics:21"
    implementation "org.openjfx:javafx-fxml:21"
    implementation "org.openjfx:javafx-base:21"
}

javafx {
    version = "21"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.base' ]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    imageName = 'EspressoLauncher'
    launcher {
        name = 'EspressoLauncher'
    }

    jpackage {
        appVersion = '1.0.0'
        vendor = 'BreachInTheContainment' // creator(s)
        icon = file('icons/icon.icns').absolutePath // mac = icns; win = ico; linux = png or svg
        installerType = project.hasProperty('installerType') ? project.property('installerType') : 'dmg'
        imageName = 'EspressoLauncher' // application name (maybe?)
        installerName = 'EspressoInstaller' // installer name
//        winConsole = false // doesn't allow the console to be ran but ONLY FOR COMPILING ON WINDOWS!!!
    }
}
/*
BEFORE UNCOMMENTING PLEASE CHECK THE REASON AT THE BOTTOM

jar {
    archiveBaseName.set("launcher_client")
    archiveVersion.set("")

    manifest {
        attributes(
                'Main-Class': application.mainClass
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.jpackage.dependsOn(tasks.jar)


jpackage {
    appVersion = '1.0.0'
    vendor = "BreachInTheContainment"
    appName = "EspressoLauncher"
    input = "build/libs"
    destination = "build/jpackage"
    mainJar = "launcher_client.jar"
    mainClass = application.mainClass
    javaOptions = ["-Xmx1024m"]

    mac {
        icon = layout.projectDirectory.file("icons/icon.icns")
    }
    windows {
        icon = layout.projectDirectory.file("icons/icon.ico")
    }
    linux {
        icon = layout.projectDirectory.file("icons/icon.png")
    }
}

commented out just incase

*/