name: Build EspressoLauncher

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    # Use a dynamic runner based on the matrix OS
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # Define the combinations of OS and installer types
        include:
          - os: ubuntu-latest
            name: linux-deb
            installerType: deb
            arch: x64
          - os: ubuntu-latest
            name: linux-rpm
            installerType: rpm
            arch: x64
          - os: windows-latest
            name: windows
            installerType: exe
            arch: x64
          - os: macos-latest
            name: macOS-arm64
            installerType: dmg
            arch: arm64
          - os: macos-latest
            name: macOS-amd64
            installerType: dmg
            arch: x64


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew (Linux & macOS)
        # This step runs only if the runner OS is not Windows
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Build and package ${{ matrix.installerType }} (${{ matrix.arch }})
        # Pass the installerType and arch to Gradle.
        # Your build.gradle must be configured to use these properties.
        run: ./gradlew clean jlink jpackage -PinstallerType=${{ matrix.installerType }} -Parch=${{ matrix.arch }}

      - name: Upload installer artifact
        # Updated to v4 to resolve deprecation warning
        uses: actions/upload-artifact@v4
        with:
          # Name the artifact uniquely using the 'name' from the matrix
          name: EspressoLauncher-${{ matrix.name }}
          # The path should also be unique if jpackage outputs different architectures to the same base directory.
          # You might need to modify your Gradle build (build.gradle) to output to a path like:
          # path: build/jpackage/${{ matrix.arch }}/
          path: build/jpackage/ # Keep this as is if jpackage handles unique subdirectories internally
